/* -*- C -*- */
DISABLED {
class GTK1.Tree;
inherit GTK1.Container;
//! DEPRECATED
//! <p>
//! A 'tree' with subnodes etc.  Do not have a tree with more than 100
//! or so entries. It will be very slow.<br />
//! Whenever possible, use W(Ctree) instead, it's way faster.
//! </p>
//! <p>
//! IMG: lambda() { object t = GTK1.Tree();  object i, t2;  t->add(i = GTK1.Tree_item("Sub node 1"));  i->set_subtree( GTK1.Tree() );  t->add(i = GTK1.Tree_item("Sub node 2"));  i->set_subtree( t2=GTK1.Tree() );  call_out(i->expand, 0);  t2->add( GTK1.Tree_item("Sub sub 1") );  t2->add( GTK1.Tree_item("Sub sub 2") );  t->add(i = GTK1.Tree_item("Sub node 3"));  i->set_subtree( GTK1.Tree() );  return t;}()
//! IMG: lambda() { object t = GTK1.Tree();  object i, t2;  t->add(i = GTK1.Tree_item("Sub node 1"));  i->set_subtree( GTK1.Tree() );  t->add(i = GTK1.Tree_item("Sub node 2"));  i->set_subtree( t2=GTK1.Tree() );  call_out(i->expand, 0);  t2->add( GTK1.Tree_item("Sub sub 1") );  t2->add( GTK1.Tree_item("Sub sub 2") );  t->add(i = GTK1.Tree_item("Sub node 3"));  i->set_subtree( GTK1.Tree() );  return t;}()->set_view_lines(0)
//! </p>
signal selection_changed;
signal select_child;
signal unselect_child;
void create();
//! Used to create a new tree widget.
void append( GTK1.Widget child );
//! Add a new tree item at insertion point
void prepend( GTK1.Widget child );
//! Add a new tree item from end (same as 'add')
void insert( GTK1.Widget child, int pos );
//! Insert a new tree item at the specified position
void clear_items( int start, int end );
//! Remove the items from position start to position end from a Tree.
void select_item( int pos );
//! Select a specified (by index) item
void unselect_item( int pos );
//! Unselect a specified (by index) item
void select_child( GTK1.Widget child );
//! Select a specified (by object) item
void unselect_child( GTK1.Widget child );
//! Unselect a specified (by object) item
int child_position( GTK1.Widget child );
//! Unselect a specified (by object) item
void set_selection_mode( int selection_mode );
//! One of CONST(GTK_SELECTION)
void set_view_mode( int view_mode );
//! One of CONST(GTK_TREE)
void set_view_lines( int viewp );
//! if true, draw lines between the nodes
};


